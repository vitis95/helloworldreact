{"ast":null,"code":"var _jsxFileName = \"/Users/vitis/workspace/helloworldreact/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; //ReactDOM.render(<App />, document.getElementById('root'));\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;   \n// }\n// const user = {\n//     firstName: 'Ivan',\n//     lastName: 'De Vita'\n// };\n// const element = (\n//     <h1>\n//         Hello, {formatName(user)}!\n//     </h1>\n// );\n//const name = \"Ivan De Vita\"\n//const element = <h1> Hello, {name}</h1>\n\n/*ReactDOM.render(\n    element,\n    document.getElementById('root')\n)*/\n// const element = <h1>Hello, world</h1>;\n// ReactDOM.render(element, document.getElementById('root'));\n//  function tick() {\n//      const element = (\n//          <div>\n//              <h1>HELLO WORLD!</h1>\n//              <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//          </div>\n//      );\n//      ReactDOM.render(element, document.getElementById('root'));\n//  }\n// setInterval(tick, 1000); // ogni secondo viene chiamata la callback tick - che a sua volta chiama la funzione ReactDOM.render()\n// function ComponenteEsempio(props) {\n//     return <h1> CIAO, {props.nome}</h1>;\n// }\n// // const elemento = <Ciao nome=\"Ivan\" />;\n// // ReactDOM.render(\n// //     elemento,\n// //     document.getElementById('root')\n// // );\n// function Funzione() {\n//     return (\n//         <div>\n//             <ComponenteEsempio nome=\"Ivan\" />\n//             <ComponenteEsempio nome=\"Luca\" />\n//             <ComponenteEsempio nome=\"Mirko\" />\n//         </div>\n//     );\n// }\n// ReactDOM.render(\n//     <Funzione />,\n//     document.getElementById('root')\n// );\n// function formatDate(date) {\n//     return date.toLocaleDateString();\n// }\n// function Comment(props) {\n//     return (\n//         <div className=\"Comment\">\n//             <div className=\"UserInfo\">\n//                 <img\n//                     className=\"Avatar\"\n//                     src={props.author.avatarUrl}\n//                     alt={props.author.name}\n//                 />\n//                 <div className=\"UserInfo-name\">\n//                     {props.author.name}\n//                 </div>\n//             </div>\n//             <div className=\"Comment-text\">{props.text}</div>\n//             <div className=\"Comment-date\">\n//                 {formatDate(props.date)}\n//             </div>\n//         </div>\n//     );\n// }\n// const comment = {\n//     date: new Date(),\n//     text: 'I hope you enjoy learning React!',\n//     author: {\n//         name: 'Hello Kitty',\n//         avatarUrl: 'https://placekitten.com/g/64/64',\n//     },\n// };\n// ReactDOM.render(\n//     <Comment\n//         date={comment.date}\n//         text={comment.text}\n//         author={comment.author}\n//     />,\n//     document.getElementById('root')\n// );\n//  function tick() {\n//      const element = (\n//          <div>\n//              <h1>HELLO WORLD!</h1>\n//              <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//          </div>\n//      );\n//      ReactDOM.render(\n//         element, \n//         document.getElementById('root')\n//     );\n//  }\n// setInterval(tick, 1000); // ogni secondo viene chiamata la callback tick - che a sua volta chiama la funzione ReactDOM.render()\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Ciao, mondo!</h1>\n//             <h2>Sono le {props.date.toLocaleTimeString()}.</h2>\n//         </div>\n//     )\n// }\n// function tick() {\n//     ReactDOM.render(\n//         <Clock />,\n//         document.getElementById('root')\n//     );\n// }\n// setInterval(tick, 1000);\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  } // 3. Quando l'output viene renderizzato, React invoca questo metodo - al suo intorno viene impostato un timer con cui invocare il metodo tick()\n\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  } // 5. Se il componente Clock dovesse essere rimosso dal DOM, React invocherebbe questo metodo ed il timer verrebbe cancellato\n\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  } // 4. Ogni secondo quindi viene invocato questo metodo - ogni secondo viene cambiato lo stato e quindi React invoca ogni volta il metodo render per sapere cosa mostrare a schermo - ogni volta this.state.date avrà un valore differente e quindi verrà mostrato un output differente\n\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  } // 2. React invoca il metodo render - lo fa per capire cosa visualizzare a schermo - React si occupa di aggiornare il DOM in modo da farlo corrispondere all'output della renderizzazione di Clock \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Ciao, mondo!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Sono le \", this.state.date.toLocaleTimeString(), \".\"));\n  }\n\n} // 1. Clocl viene passato a ReactDOM.render() - React invoca il costruttore di Clock - Clock ha bisogno di mostrare l'ora corrente, per cui inizializziamo lo stato con l'ora corrente - aggiorneremo in seguito lo stato \n\n\nReactDOM.render(React.createElement(Clock, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}), document.getElementById('root'));\n\nclass Interruttore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      acceso: true\n    }; // Necessario per accedere al corretto valore di `this` all'interno della callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      acceso: !state.acceso\n    }));\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.acceso ? 'Acceso' : 'Spento');\n  }\n\n}\n\nReactDOM.render(React.createElement(Interruttore, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 235\n  },\n  __self: this\n}), document.getElementById('root-6'));\n\nfunction BenvenutoUtente(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Bentornato/a!\");\n}\n\nfunction BenvenutoOspite(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Autenticati, per favore\");\n}\n\nfunction Benvenuto(props) {\n  const utenteAutenticato = props.utenteAutenticato;\n\n  if (utenteAutenticato) {\n    return React.createElement(BenvenutoUtente, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(BenvenutoOspite, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  });\n}\n\nReactDOM.render( // Prova a cambiare in utenteAutenticato={true}\nReact.createElement(Benvenuto, {\n  utenteAutenticato: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 258\n  },\n  __self: this\n}), document.getElementById('root-7'));\n\nfunction BottoneLogin(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Login\");\n}\n\nfunction BottoneLogout(props) {\n  return React.createElement(\"button\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Logout\");\n}\n\nclass ControlloLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {\n      utenteAutenticato: false\n    };\n  }\n\n  handleLoginClick() {\n    this.setState({\n      utenteAutenticato: true\n    });\n  }\n\n  handleLogoutClick() {\n    this.setState({\n      utenteAutenticato: false\n    });\n  }\n\n  render() {\n    const utenteAutenticato = this.state.utenteAutenticato;\n    let bottone;\n\n    if (utenteAutenticato) {\n      bottone = React.createElement(BottoneLogout, {\n        onClick: this.handleLogoutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n    } else {\n      bottone = React.createElement(BottoneLogin, {\n        onClick: this.handleLoginClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Benvenuto, {\n      utenteAutenticato: utenteAutenticato,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), bottone);\n  }\n\n}\n\nReactDOM.render(React.createElement(ControlloLogin, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 309\n  },\n  __self: this\n}), document.getElementById('root-7'));\n\nfunction MessaggioAvviso(props) {\n  if (!props.attenzione) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"CIAO\");\n}\n\nclass Pagina extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mostraAvviso: true\n    };\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(state => ({\n      mostraAvviso: !state.mostraAvviso\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(MessaggioAvviso, {\n      attenzione: this.state.mostraAvviso,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleToggleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, this.state.mostraAvviso ? 'Nascondi' : 'Mostra'));\n  }\n\n}\n\nReactDOM.render(React.createElement(Pagina, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 350\n  },\n  __self: this\n}), document.getElementById('root-8'));\nconst numeri = [1, 2, 3, 4, 5];\nconst lista = numeri.map(numero => numero * 2); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/vitis/workspace/helloworldreact/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Clock","Component","constructor","props","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","toLocaleTimeString","document","getElementById","Interruttore","acceso","handleClick","bind","BenvenutoUtente","BenvenutoOspite","Benvenuto","utenteAutenticato","BottoneLogin","onClick","BottoneLogout","ControlloLogin","handleLoginClick","handleLogoutClick","bottone","MessaggioAvviso","attenzione","Pagina","mostraAvviso","handleToggleClick","numeri","lista","map","numero","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;;AACA;;;;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,KAAb;AACH,GAJ+B,CAMhC;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeC,WAAW,CACtB,MAAM,KAAKC,IAAL,EADgB,EAEtB,IAFsB,CAA1B;AAIH,GAZ+B,CAchC;;;AACAC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACH,GAjB+B,CAmBhC;;;AACAE,EAAAA,IAAI,GAAG;AACH,SAAKG,QAAL,CAAc;AACVR,MAAAA,IAAI,EAAE,IAAI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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n// }\n\n// function getGreeting(user) {\n//     if (user) {\n//         return <h1>Hello, {formatName(user)}!</h1>;\n//     }\n//     return <h1>Hello, Stranger.</h1>;   \n// }\n\n// const user = {\n//     firstName: 'Ivan',\n//     lastName: 'De Vita'\n// };\n\n// const element = (\n//     <h1>\n//         Hello, {formatName(user)}!\n//     </h1>\n// );\n\n\n\n//const name = \"Ivan De Vita\"\n//const element = <h1> Hello, {name}</h1>\n/*ReactDOM.render(\n    element,\n    document.getElementById('root')\n)*/\n\n// const element = <h1>Hello, world</h1>;\n// ReactDOM.render(element, document.getElementById('root'));\n\n//  function tick() {\n//      const element = (\n//          <div>\n//              <h1>HELLO WORLD!</h1>\n//              <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//          </div>\n//      );\n//      ReactDOM.render(element, document.getElementById('root'));\n//  }\n\n// setInterval(tick, 1000); // ogni secondo viene chiamata la callback tick - che a sua volta chiama la funzione ReactDOM.render()\n\n\n\n// function ComponenteEsempio(props) {\n//     return <h1> CIAO, {props.nome}</h1>;\n// }\n\n// // const elemento = <Ciao nome=\"Ivan\" />;\n// // ReactDOM.render(\n// //     elemento,\n// //     document.getElementById('root')\n// // );\n\n\n\n// function Funzione() {\n//     return (\n//         <div>\n//             <ComponenteEsempio nome=\"Ivan\" />\n//             <ComponenteEsempio nome=\"Luca\" />\n//             <ComponenteEsempio nome=\"Mirko\" />\n//         </div>\n//     );\n// }\n\n// ReactDOM.render(\n//     <Funzione />,\n//     document.getElementById('root')\n// );\n\n\n// function formatDate(date) {\n//     return date.toLocaleDateString();\n// }\n\n// function Comment(props) {\n//     return (\n//         <div className=\"Comment\">\n//             <div className=\"UserInfo\">\n//                 <img\n//                     className=\"Avatar\"\n//                     src={props.author.avatarUrl}\n//                     alt={props.author.name}\n//                 />\n//                 <div className=\"UserInfo-name\">\n//                     {props.author.name}\n//                 </div>\n//             </div>\n//             <div className=\"Comment-text\">{props.text}</div>\n//             <div className=\"Comment-date\">\n//                 {formatDate(props.date)}\n//             </div>\n//         </div>\n//     );\n// }\n\n// const comment = {\n//     date: new Date(),\n//     text: 'I hope you enjoy learning React!',\n//     author: {\n//         name: 'Hello Kitty',\n//         avatarUrl: 'https://placekitten.com/g/64/64',\n//     },\n// };\n\n\n// ReactDOM.render(\n//     <Comment\n//         date={comment.date}\n//         text={comment.text}\n//         author={comment.author}\n//     />,\n//     document.getElementById('root')\n// );\n\n\n\n//  function tick() {\n//      const element = (\n//          <div>\n//              <h1>HELLO WORLD!</h1>\n//              <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//          </div>\n//      );\n//      ReactDOM.render(\n//         element, \n//         document.getElementById('root')\n//     );\n//  }\n\n// setInterval(tick, 1000); // ogni secondo viene chiamata la callback tick - che a sua volta chiama la funzione ReactDOM.render()\n\n// function Clock(props) {\n//     return (\n//         <div>\n//             <h1>Ciao, mondo!</h1>\n//             <h2>Sono le {props.date.toLocaleTimeString()}.</h2>\n//         </div>\n//     )\n// }\n\n// function tick() {\n//     ReactDOM.render(\n//         <Clock />,\n//         document.getElementById('root')\n//     );\n// }\n\n// setInterval(tick, 1000);\n\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { date: new Date() };\n    }\n\n    // 3. Quando l'output viene renderizzato, React invoca questo metodo - al suo intorno viene impostato un timer con cui invocare il metodo tick()\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    // 5. Se il componente Clock dovesse essere rimosso dal DOM, React invocherebbe questo metodo ed il timer verrebbe cancellato\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    // 4. Ogni secondo quindi viene invocato questo metodo - ogni secondo viene cambiato lo stato e quindi React invoca ogni volta il metodo render per sapere cosa mostrare a schermo - ogni volta this.state.date avrà un valore differente e quindi verrà mostrato un output differente\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    // 2. React invoca il metodo render - lo fa per capire cosa visualizzare a schermo - React si occupa di aggiornare il DOM in modo da farlo corrispondere all'output della renderizzazione di Clock \n    render() {\n        return (\n            <div>\n                <h1>Ciao, mondo!</h1>\n                <h2>Sono le {this.state.date.toLocaleTimeString()}.</h2>\n            </div>\n        );\n    }\n}\n\n// 1. Clocl viene passato a ReactDOM.render() - React invoca il costruttore di Clock - Clock ha bisogno di mostrare l'ora corrente, per cui inizializziamo lo stato con l'ora corrente - aggiorneremo in seguito lo stato \nReactDOM.render(\n    <Clock />,\n    document.getElementById('root')\n);\n\n\n\n\n\nclass Interruttore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { acceso: true };\n        // Necessario per accedere al corretto valore di `this` all'interno della callback\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.setState(state => ({\n            acceso: !state.acceso\n        }));\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleClick}>\n                {this.state.acceso ? 'Acceso' : 'Spento'}\n            </button>\n        );\n    }\n}\n\nReactDOM.render(\n    <Interruttore />,\n    document.getElementById('root-6')\n);\n\n\nfunction BenvenutoUtente(props) {\n    return <h1>Bentornato/a!</h1>;\n}\n\nfunction BenvenutoOspite(props) {\n    return <h1>Autenticati, per favore</h1>;\n}\n\nfunction Benvenuto(props) {\n    const utenteAutenticato = props.utenteAutenticato;\n    if(utenteAutenticato) {\n        return <BenvenutoUtente />;\n    }\n    return <BenvenutoOspite />;\n}\n\nReactDOM.render(\n    // Prova a cambiare in utenteAutenticato={true}\n    <Benvenuto utenteAutenticato={false} />,\n    document.getElementById('root-7')\n)\n\nfunction BottoneLogin(props) {\n    return <button onClick={props.onClick}>Login</button>;\n}\n\nfunction BottoneLogout(props) {\n    return <button onClick={props.onClick}>Logout</button>;\n}\n\nclass ControlloLogin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleLoginClick = this.handleLoginClick.bind(this);\n        this.handleLogoutClick = this.handleLogoutClick.bind(this);\n        this.state = {utenteAutenticato: false};\n    }\n\n    handleLoginClick(){\n        this.setState({utenteAutenticato: true});\n    }\n\n    handleLogoutClick(){\n        this.setState({utenteAutenticato: false});\n    }\n\n    render() {\n        const utenteAutenticato = this.state.utenteAutenticato;\n        let bottone;\n\n        if(utenteAutenticato) {\n            bottone = (\n                <BottoneLogout onClick={this.handleLogoutClick} />\n            );\n        } else {\n            bottone = (\n                <BottoneLogin onClick={this.handleLoginClick} />\n            );\n        }\n        return (\n            <div>\n                <Benvenuto utenteAutenticato={utenteAutenticato} />\n                {bottone}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <ControlloLogin />,\n    document.getElementById('root-7')\n);\n\nfunction MessaggioAvviso(props) {\n    if (!props.attenzione){\n        return null;\n    }\n\n    return <div className=\"warning\">CIAO</div>;\n}\n\nclass Pagina extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {mostraAvviso: true};\n        this.handleToggleClick = this.handleToggleClick.bind(\n            this\n        );\n    }\n    handleToggleClick() {\n        this.setState(state => ({\n            mostraAvviso: !state.mostraAvviso,\n        }));\n    }\n\n    render() {\n        return (\n            <div>\n                <MessaggioAvviso\n                    attenzione={this.state.mostraAvviso}\n                />\n                <button onClick={this.handleToggleClick}>\n                    {this.state.mostraAvviso ? 'Nascondi' : 'Mostra'}\n                </button>\n            </div>\n        );\n    }\n}\n\n    ReactDOM.render(\n        <Pagina />,\n        document.getElementById('root-8')\n    );\n\n\n    const numeri = [1, 2, 3, 4, 5];\n    const lista = numeri.map((numero) => numero *2);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}